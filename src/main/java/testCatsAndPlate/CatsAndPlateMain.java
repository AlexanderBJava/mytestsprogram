package testCatsAndPlate;

import java.util.ArrayList;

public class CatsAndPlateMain {
    public static void main(String[] args) {
/*
1. Сделайте класс Кошка так, чтобы у каждой кошки был индивидуальный номер по порядку,
который бы увеличивался для новой кошки каждый раз, когда создается новая кошка.
Для это используйте static и конструктор.

2. Пусть у всех кошек будет одна на всех миска и одна на всех тарелка.
Реализуйте двумя путями:
а) через статические переменные внутри класса Кошка
б) через отдельный класс Миска (Bowl) и отдельный класс Тарелка (Plate), но уже
без использования static. Обратите внимание, что
в классе Миска не должно быть ни статических полей, ни статических методов.
Чтобы вы могли при желании создать сколько угодно общих тарелок.

3. Проверьте, что все работает
а) Из другого класса (например, Main) создайте несколько кошек и выведите их номер,
чтобы было видно, что нумерация кошек работает.
б) Сделайте так, чтобы кошки пили и ели из тарелки и миски (статических).
Отобразите, сколько съела/выпила каждая кошка и сколько еды/воды
осталось в тарелке и миске.
в) Создайте экземпляры классов Тарелка и Миска.
г) Сделайте так, чтобы кошки пили и ели из этих экземпляров класса.
Отобразите, сколько съела/выпила каждая кошка и сколько еды/воды
осталось в тарелке и миске.
 */

        Cats cat=new Cats("Tom");
        Cats cat1=new Cats("Jerry");
        Cats cat2=new Cats("Kate");
        Cats cat3=new Cats("Leo");
        Cats.numberOfCats();
        System.out.println(cat3.name+ cat3.catId);
      //  cat2.eat();
      //  cat.eat();
       // cat3.eat();

          Bowl bowl=new Bowl(500, cat);
          Bowl bowl1=new Bowl(600,cat1);
        bowl1.eatFromBowl();
        bowl.eatFromBowl();








    }


}
